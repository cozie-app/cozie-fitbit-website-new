"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3638],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(a),m=r,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return a?n.createElement(f,o(o({ref:t},s),{},{components:a})):n.createElement(f,o({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3553:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const i={id:"extracting-data",title:"Extracting Data from Cozie",sidebar_label:"Extracting Data from Cozie"},o=void 0,l={unversionedId:"extracting-data",id:"extracting-data",title:"Extracting Data from Cozie",description:"Extracting Data",source:"@site/docs/getting_started_extracting_data.md",sourceDirName:".",slug:"/extracting-data",permalink:"/docs/extracting-data",draft:!1,editUrl:"https://github.com/cozie-app/cozie-fitbit-website-new/tree/main/docs/getting_started_extracting_data.md",tags:[],version:"current",frontMatter:{id:"extracting-data",title:"Extracting Data from Cozie",sidebar_label:"Extracting Data from Cozie"},sidebar:"tutorialSidebar",previous:{title:"Installing  Cozie",permalink:"/docs/installing-clock-face"},next:{title:"Troubleshooting Cozie",permalink:"/docs/troubleshooting-cozie-basic"}},c={},d=[{value:"Extracting Data",id:"extracting-data",level:2},{value:"Extracting Data with Python",id:"extracting-data-with-python",level:3}],s={toc:d};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"extracting-data"},"Extracting Data"),(0,r.kt)("p",null,"Data can be extracted via our web API:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description / Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"API URL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://6uc3obiy9f.execute-api.ap-southeast-1.amazonaws.com/default/cozie-fitbit-researcher-read-influx"},"https://6uc3obiy9f.execute-api.ap-southeast-1.amazonaws.com/default/cozie-fitbit-researcher-read-influx"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"API Key"),(0,r.kt)("td",{parentName:"tr",align:null},"bUiB1HqmrK2eDBNqhsuGmaxrUKL1od8c3Qo6LJij")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"experiment-id ","\u200c"," ","\u200c"," ","\u200c"),(0,r.kt)("td",{parentName:"tr",align:null},"The name you set in the cozie settings above (required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user-id"),(0,r.kt)("td",{parentName:"tr",align:null},"The user-id set above (optional, if not included all users are extracted)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"weeks"),(0,r.kt)("td",{parentName:"tr",align:null},"Weeks of data (optional, default is 2 weeks)")))),(0,r.kt)("h3",{id:"extracting-data-with-python"},"Extracting Data with Python"),(0,r.kt)("p",null,"The Python script below is all you need to download data logged with the Cozie clock face.. Make sure to configure at leaset ",(0,r.kt)("inlineCode",{parentName:"p"},"EXPERIMENT_ID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"PARTICIPANT")," before executing the script."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Import Python modules\nimport requests\nimport pandas as pd\nimport json\n\n# Config\nEXPERIMENT_ID = 'alpha'\nPARTICIPANT_ID = 'alpha01'\nNO_WEEKS = 30\nYOUR_TIMEZONE = 'Asia/Singapore'\n\n# Assemble request\npayload = {'experiment_id': EXPERIMENT_ID, 'weeks': NO_WEEKS, 'user_id': PARTICIPANT_ID}\nheaders = {\"Accept\": \"application/json\", 'x-api-key': 'bUiB1HqmrK2eDBNqhsuGmaxrUKL1od8c3Qo6LJij'} # Test API key limited to 200 requests per day\n\n# Query data\nresponse = requests.get('https://6uc3obiy9f.execute-api.ap-southeast-1.amazonaws.com/default/cozie-fitbit-researcher-read-influx', params=payload, headers=headers)\n\n# Convert response to Pandas dataframe\nmy_json = response.content.decode('utf8').replace(\"'\", '\"')\ndata = json.loads(my_json)\ndf = pd.read_json(data[1]['data']).T\ndf.index = df.index.tz_localize('UTC').tz_convert(YOUR_TIMEZONE)\n\ndf.head()\n")))}p.isMDXComponent=!0}}]);